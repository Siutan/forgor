name: Auto Release on Merge

on:
  push:
    branches: [main]
    # Only trigger if the push is from a merged PR, not direct pushes
    # This prevents infinite loops and ensures we only release on merges

jobs:
  auto-release:
    runs-on: ubuntu-latest
    # Only run if this is a merge commit (has multiple parents)
    if: github.event.head_commit.message != null

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need full history to check for existing tags
          token: ${{ secrets.FORGOR_PAT }} # Must use PAT instead of GITHUB_TOKEN to trigger other workflows

      - name: Read current version
        id: version
        run: |
          if [ ! -f "VERSION" ]; then
            echo "❌ VERSION file not found"
            exit 1
          fi

          VERSION=$(cat VERSION | tr -d '\n\r ')
          echo "Current version: $VERSION"

          # Validate version format (basic semver check)
          if ! echo "$VERSION" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.-]+)?$' > /dev/null; then
            echo "❌ Invalid version format: $VERSION"
            echo "Expected format: X.Y.Z or X.Y.Z-suffix"
            exit 1
          fi

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: tag_check
        run: |
          TAG="v${{ steps.version.outputs.version }}"

          # Check if tag exists locally
          if git tag -l "$TAG" | grep -q "$TAG"; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "⚠️ Tag $TAG already exists locally"
          # Check if tag exists on remote
          elif git ls-remote --tags origin | grep -q "refs/tags/$TAG$"; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "⚠️ Tag $TAG already exists on remote"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "✅ Tag $TAG does not exist, proceeding with release"
          fi

      - name: Check if this is a merge from PR
        id: pr_check
        run: |
          # Check if this commit message indicates a PR merge
          if echo "${{ github.event.head_commit.message }}" | grep -q "Merge pull request"; then
            echo "is_pr_merge=true" >> $GITHUB_OUTPUT
            echo "✅ This is a PR merge, proceeding with release"
          elif echo "${{ github.event.head_commit.message }}" | grep -q "Squash merge"; then
            echo "is_pr_merge=true" >> $GITHUB_OUTPUT
            echo "✅ This is a squash merge, proceeding with release"
          else
            echo "is_pr_merge=false" >> $GITHUB_OUTPUT
            echo "ℹ️ This is not a PR merge, skipping release"
          fi

      - name: Set up Git user
        if: steps.tag_check.outputs.exists == 'false' && steps.pr_check.outputs.is_pr_merge == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Create and push tag
        if: steps.tag_check.outputs.exists == 'false' && steps.pr_check.outputs.is_pr_merge == 'true'
        run: |
          TAG="${{ steps.version.outputs.tag }}"
          VERSION="${{ steps.version.outputs.version }}"

          echo "🏷️ Creating tag: $TAG"
          git tag -a "$TAG" -m "Release version $VERSION"

          echo "📤 Pushing tag to remote"
          # Use PAT to ensure the tag push can trigger other workflows
          git remote set-url origin https://x-access-token:${{ secrets.FORGOR_PAT }}@github.com/${{ github.repository }}
          git push origin "$TAG"

          echo "✅ Tag $TAG created and pushed successfully"

      - name: Wait for release workflow
        if: steps.tag_check.outputs.exists == 'false' && steps.pr_check.outputs.is_pr_merge == 'true'
        run: |
          echo "⏳ Tag created, the release workflow will now automatically trigger"
          echo "🔗 Check the Actions tab to see the release being created"
          echo "📦 Release will be available at: https://github.com/${{ github.repository }}/releases"

      - name: Summary
        run: |
          echo "## 🚀 Auto Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** ${{ steps.version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.tag_check.outputs.exists }}" = "true" ]; then
            echo "⚠️ **Status:** Tag already exists, no release created" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ steps.pr_check.outputs.is_pr_merge }}" = "false" ]; then
            echo "ℹ️ **Status:** Not a PR merge, no release created" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ **Status:** Tag created, release workflow triggered" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🔗 [View Releases](https://github.com/${{ github.repository }}/releases)" >> $GITHUB_STEP_SUMMARY
          fi
